knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data("leuk", package = "MASS")
leuk_dat <- leuk
#adding surv24 column
leuk_dat$surv24 <- ifelse(leuk_dat$time>=24, 1,0)
#fit glm (note: wbc is logtransformed with base 10)
model1 <- surv24 ~ log10(wbc) + ag
glm_m1 <- glm(model1, data = leuk_dat, family = binomial())
summary(glm_m1)
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells", col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#fit glm with interaction term
model2 <- surv24 ~ log10(wbc) + ag + log10(wbc)*ag
glm_m2 <- glm(model2, data = leuk_dat, family = binomial())
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells", col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#fit glm with interaction term
model2 <- surv24 ~ log10(wbc) + ag + log10(wbc)*ag
glm_m2 <- glm(model2, data = leuk_dat, family = binomial())
summary(glm_m2)
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data(Default, package = "ISLR")
#Check first few rows of data and summary statistics of each columns
kable(head(Default), caption = "First few rows of data")
#summary stats on the data
summary(Default)
#Check for missing values
cat("Number of rows with missing values in the data:", sum(is.na(Default)))
#Check the dispersion of balances & income for each category of default
#layout(matrix(2:2, ncol = 2, nrow = 2))
par(mfrow = c(1, 4))
plot(balance ~ default, data = Default, col=c("green", "red"))
plot(income ~ default, data = Default, col=c("green", "red"))
cdplot(default ~ balance, data = Default)
cdplot(default ~ income, data = Default)
#plot in ggplot
plot1 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=balance), color=c("green","red"))
plot2 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=income), color=c("green","red"))
plot1 + plot2
#split data set by factors in default column
df_yes <- Default[Default$default=="Yes", ]
df_no <- Default[Default$default=="No", ]
#Calculate percentiles
row1 <- (table(Default$student)/length(Default$student))*100
#cat("Percentage of non-students and students in defaulters")
row2 <- (table(df_yes$student)/length(df_yes$student))*100
#cat("Percentage of non-students and students in non-defaulters")
row3<- (table(df_no$student)/length(df_no$student))*100
dat <- cbind(c(row1[1], row1[2]),c(row2[1], row2[2]),c(row3[1], row3[2]))
stu_df <- as.data.frame(as.matrix(dat, nrow=2,ncol=3))
names(stu_df) <- c("Total", "Defaulters", "Non-Defaulters")
kable(stu_df)
#glm
model1 <- default ~ student + balance + income
glm_m1 <- glm(model1, data = Default, family = binomial())
model2 <- default ~ student + balance + log10(income)
glm_m2 <- glm(model2, data = Default, family = binomial())
model3 <- (default ~ student + balance + log10(income) + student*balance +
student*log10(income) + balance*log10(income))
glm_m3 <- glm(model3, data = Default, family = binomial())
model4 <- default ~ student + balance
glm_m4 <- glm(model4, data = Default, family = binomial())
summary(glm_m4)
#split data into train test
sample <- sample(1:nrow(Default), size = floor(.75*nrow(Default)), replace = F)
train <- Default[sample, ]
test  <- Default[-sample, ]
#fit model
model <- default ~ student + balance
glm_model <- glm(model, data = train, family = binomial())
#predict
predictions <- predict(glm_model, test, type = "response")
predicted.classes <- ifelse(predictions > 0.5, "Yes", "No")
# Model accuracy
model_acc <- mean(predicted.classes == test$default)*100
cat("Proportion of correctly classified observations:", model_acc,"%\n")
cat("Error rate:", 100-model_acc,"%")
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
#load data
data("leuk", package = "MASS")
leuk_dat <- leuk
#adding surv24 column
leuk_dat$surv24 <- ifelse(leuk_dat$time>=24, 1,0)
#fit glm (note: wbc is logtransformed with base 10)
model1 <- surv24 ~ log10(wbc) + ag
glm_m1 <- glm(model1, data = leuk_dat, family = binomial())
summary(glm_m1)
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells", col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data("leuk", package = "MASS")
leuk_dat <- leuk
#adding surv24 column
leuk_dat$surv24 <- ifelse(leuk_dat$time>=24, 1,0)
#fit glm (note: wbc is logtransformed with base 10)
model1 <- surv24 ~ log10(wbc) + ag
glm_m1 <- glm(model1, data = leuk_dat, family = binomial())
summary(glm_m1)
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells", col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#fit glm with interaction term
model2 <- surv24 ~ log10(wbc) + ag + log10(wbc)*ag
glm_m2 <- glm(model2, data = leuk_dat, family = binomial())
summary(glm_m2)
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data(Default, package = "ISLR")
#Check first few rows of data and summary statistics of each columns
kable(head(Default), caption = "First few rows of data")
#summary stats on the data
summary(Default)
#Check for missing values
cat("Number of rows with missing values in the data:", sum(is.na(Default)))
#Check the dispersion of balances & income for each category of default
#layout(matrix(2:2, ncol = 2, nrow = 2))
par(mfrow = c(1, 4))
plot(balance ~ default, data = Default, col=c("green", "red"))
plot(income ~ default, data = Default, col=c("green", "red"))
cdplot(default ~ balance, data = Default)
cdplot(default ~ income, data = Default)
#plot in ggplot
plot1 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=balance), color=c("green","red"))
plot2 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=income), color=c("green","red"))
plot1 + plot2
#split data set by factors in default column
df_yes <- Default[Default$default=="Yes", ]
df_no <- Default[Default$default=="No", ]
#Calculate percentiles
row1 <- (table(Default$student)/length(Default$student))*100
#cat("Percentage of non-students and students in defaulters")
row2 <- (table(df_yes$student)/length(df_yes$student))*100
#cat("Percentage of non-students and students in non-defaulters")
row3<- (table(df_no$student)/length(df_no$student))*100
dat <- cbind(c(row1[1], row1[2]),c(row2[1], row2[2]),c(row3[1], row3[2]))
stu_df <- as.data.frame(as.matrix(dat, nrow=2,ncol=3))
names(stu_df) <- c("Total", "Defaulters", "Non-Defaulters")
kable(stu_df)
#glm
model1 <- default ~ student + balance + income
glm_m1 <- glm(model1, data = Default, family = binomial())
model2 <- default ~ student + balance + log10(income)
glm_m2 <- glm(model2, data = Default, family = binomial())
model3 <- (default ~ student + balance + log10(income) + student*balance +
student*log10(income) + balance*log10(income))
glm_m3 <- glm(model3, data = Default, family = binomial())
model4 <- default ~ student + balance
glm_m4 <- glm(model4, data = Default, family = binomial())
summary(glm_m4)
#split data into train test
sample <- sample(1:nrow(Default), size = floor(.75*nrow(Default)), replace = F)
train <- Default[sample, ]
test  <- Default[-sample, ]
#fit model
model <- default ~ student + balance
glm_model <- glm(model, data = train, family = binomial())
#predict
predictions <- predict(glm_model, test, type = "response")
predicted.classes <- ifelse(predictions > 0.5, "Yes", "No")
# Model accuracy
model_acc <- mean(predicted.classes == test$default)*100
cat("Proportion of correctly classified observations:", model_acc,"%\n")
cat("Error rate:", 100-model_acc,"%")
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data(Default, package = "ISLR")
#Check first few rows of data and summary statistics of each columns
kable(head(Default), caption = "First few rows of data")
#summary stats on the data
summary(Default)
#Check for missing values
cat("Number of rows with missing values in the data:", sum(is.na(Default)))
#Check the dispersion of balances & income for each category of default
#layout(matrix(2:2, ncol = 2, nrow = 2))
par(mfrow = c(1, 4))
plot(balance ~ default, data = Default, col=c("green", "red"))
plot(income ~ default, data = Default, col=c("green", "red"))
cdplot(default ~ balance, data = Default)
cdplot(default ~ income, data = Default)
#plot in ggplot
plot1 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=balance), color=c("green","red"))
plot2 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=income), color=c("green","red"))
plot1 + plot2
#split data set by factors in default column
df_yes <- Default[Default$default=="Yes", ]
df_no <- Default[Default$default=="No", ]
#Calculate percentiles
row1 <- (table(Default$student)/length(Default$student))*100
#cat("Percentage of non-students and students in defaulters")
row2 <- (table(df_yes$student)/length(df_yes$student))*100
#cat("Percentage of non-students and students in non-defaulters")
row3<- (table(df_no$student)/length(df_no$student))*100
dat <- cbind(c(row1[1], row1[2]),c(row2[1], row2[2]),c(row3[1], row3[2]))
stu_df <- as.data.frame(as.matrix(dat, nrow=2,ncol=3))
names(stu_df) <- c("Total", "Defaulters", "Non-Defaulters")
kable(stu_df)
#glm
model1 <- default ~ student + balance + income
glm_m1 <- glm(model1, data = Default, family = binomial())
model2 <- default ~ student + balance + log10(income)
glm_m2 <- glm(model2, data = Default, family = binomial())
model3 <- (default ~ student + balance + log10(income) + student*balance +
student*log10(income) + balance*log10(income))
glm_m3 <- glm(model3, data = Default, family = binomial())
model4 <- default ~ student + balance
glm_m4 <- glm(model4, data = Default, family = binomial())
summary(glm_m4)
#split data into train test
sample <- sample(1:nrow(Default), size = floor(.75*nrow(Default)), replace = F)
train <- Default[sample, ]
test  <- Default[-sample, ]
#fit model
model <- default ~ student + balance
glm_model <- glm(model, data = train, family = binomial())
#predict
predictions <- predict(glm_model, test, type = "response")
predicted.classes <- ifelse(predictions > 0.5, "Yes", "No")
# Model accuracy
model_acc <- mean(predicted.classes == test$default)*100
cat("Proportion of correctly classified observations:", model_acc,"%\n")
cat("Error rate:", 100-model_acc,"%")
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data(Default, package = "ISLR")
#Check first few rows of data and summary statistics of each columns
kable(head(Default), caption = "First few rows of data")
#summary stats on the data
summary(Default)
#Check for missing values
cat("Number of rows with missing values in the data:", sum(is.na(Default)))
#Check the dispersion of balances & income for each category of default
#layout(matrix(2:2, ncol = 2, nrow = 2))
par(mfrow = c(1, 4))
plot(balance ~ default, data = Default, col=c("green", "red"))
plot(income ~ default, data = Default, col=c("green", "red"))
cdplot(default ~ balance, data = Default)
cdplot(default ~ income, data = Default)
#plot in ggplot
plot1 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=balance), color=c("green","red"))
plot2 <- ggplot() +
geom_boxplot(data = Default, aes(x=default, y=income), color=c("green","red"))
plot1 + plot2
#split data set by factors in default column
df_yes <- Default[Default$default=="Yes", ]
df_no <- Default[Default$default=="No", ]
#Calculate percentiles
row1 <- (table(Default$student)/length(Default$student))*100
#cat("Percentage of non-students and students in defaulters")
row2 <- (table(df_yes$student)/length(df_yes$student))*100
#cat("Percentage of non-students and students in non-defaulters")
row3<- (table(df_no$student)/length(df_no$student))*100
dat <- cbind(c(row1[1], row1[2]),c(row2[1], row2[2]),c(row3[1], row3[2]))
stu_df <- as.data.frame(as.matrix(dat, nrow=2,ncol=3))
names(stu_df) <- c("Total", "Defaulters", "Non-Defaulters")
kable(stu_df)
#glm
model1 <- default ~ student + balance + income
glm_m1 <- glm(model1, data = Default, family = binomial())
model2 <- default ~ student + balance + log10(income)
glm_m2 <- glm(model2, data = Default, family = binomial())
model3 <- (default ~ student + balance + log10(income) + student*balance +
student*log10(income) + balance*log10(income))
glm_m3 <- glm(model3, data = Default, family = binomial())
model4 <- default ~ student + balance
glm_m4 <- glm(model4, data = Default, family = binomial())
summary(glm_m4)
#split data into train test
sample <- sample(1:nrow(Default), size = floor(.75*nrow(Default)), replace = F)
train <- Default[sample, ]
test  <- Default[-sample, ]
#fit model
model <- default ~ student + balance
glm_model <- glm(model, data = train, family = binomial())
#predict
predictions <- predict(glm_model, test, type = "response")
predicted.classes <- ifelse(predictions > 0.5, "Yes", "No")
# Model accuracy
model_acc <- mean(predicted.classes == test$default)*100
cat("Proportion of correctly classified observations:", model_acc,"%\n")
cat("Error rate:", 100-model_acc,"%")
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data("leuk", package = "MASS")
leuk_dat <- leuk
#adding surv24 column
leuk_dat$surv24 <- ifelse(leuk_dat$time>=24, 1,0)
#fit glm (note: wbc is logtransformed with base 10)
model1 <- surv24 ~ log10(wbc) + ag
glm_m1 <- glm(model1, data = leuk_dat, family = binomial())
summary(glm_m1)
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells", col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#fit glm with interaction term
model2 <- surv24 ~ log10(wbc) + ag + log10(wbc)*ag
glm_m2 <- glm(model2, data = leuk_dat, family = binomial())
summary(glm_m2)
knitr::opts_chunk$set(message=F,warning=F,echo=F,fig_height=10,fig_width=7,cache = F)
#List of libraries used in the project
library(HSAUR3)
library(knitr)
library(ggplot2)
library(broom)
library(patchwork)
#load data
data("leuk", package = "MASS")
leuk_dat <- leuk
#adding surv24 column
leuk_dat$surv24 <- ifelse(leuk_dat$time>=24, 1,0)
#fit glm (note: wbc is logtransformed with base 10)
model1 <- surv24 ~ log10(wbc) + ag
glm_m1 <- glm(model1, data = leuk_dat, family = binomial())
summary(glm_m1)
#plot probabiliy of ag for each category
probability <- predict(glm_m1, leuk_dat, type = "response")
plot(probability~leuk_dat$ag, main="Probability of longer life expectancy (base plot)",
xlab="presence or absence of a morphological characteristic of the white blood cells",
col=c("red", "green"))
#plot in ggplot
ggplot() +
geom_boxplot(aes(x=leuk_dat$ag, y=probability),color = c("red", "green")) +
ggtitle("Probability of longer life expectancy (ggplot)") +
xlab("presence or absence of a morphological characteristic of the white blood cells")
#fit glm with interaction term
model2 <- surv24 ~ log10(wbc) + ag + log10(wbc)*ag
glm_m2 <- glm(model2, data = leuk_dat, family = binomial())
summary(glm_m2)
